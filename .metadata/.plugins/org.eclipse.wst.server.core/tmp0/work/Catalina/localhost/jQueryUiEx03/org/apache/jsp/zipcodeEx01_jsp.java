/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-05-17 07:38:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class zipcodeEx01_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/cupertino/jquery-ui.css\" />\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("	font-size: 80%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/jquery-3.7.0.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"./js/jquery-ui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("	  $('#sido').selectmenu({\r\n");
      out.write("	    width: 150\r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  $('#gugun').selectmenu({\r\n");
      out.write("	    width: 150\r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  $('#dong').selectmenu({\r\n");
      out.write("	    width: 150\r\n");
      out.write("	  });\r\n");
      out.write("\r\n");
      out.write("	  $.ajax({\r\n");
      out.write("	    url: './data/sido.jsp',\r\n");
      out.write("	    dataType: 'xml',\r\n");
      out.write("	    success: function(data) {\r\n");
      out.write("	      var options = '';\r\n");
      out.write("	      $(data).find('sido').each(function() {\r\n");
      out.write("	        var sido = $(this).text();\r\n");
      out.write("	        options += '<option value=\"' + sido + '\">' + sido + '</option>';\r\n");
      out.write("	      });\r\n");
      out.write("	      $('#sido').append(options);\r\n");
      out.write("	    }\r\n");
      out.write("	  error: function(e) {\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	  });\r\n");
      out.write("	  \r\n");
      out.write("	  $('#sido').on('change', function() {\r\n");
      out.write("		    var selectedSido = $(this).val();\r\n");
      out.write("		    console.log(\"선택된 시도: \" + selectedSido);\r\n");
      out.write("		  });\r\n");
      out.write("\r\n");
      out.write("	  $('#btn').button().on('click', function() {\r\n");
      out.write("	  });\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<fieldset>\r\n");
      out.write("	<legend>우편번호 검색</legend>\r\n");
      out.write("	<label for=\"sido\">시도</label>\r\n");
      out.write("	<select id=\"sido\">\r\n");
      out.write("		<option disabled=\"disabled\" selected=\"selected\">시도 선택</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	<label for=\"gugun\">구군</label>\r\n");
      out.write("	<select id=\"gugun\">\r\n");
      out.write("		<option disabled=\"disabled\" selected=\"selected\">구군 선택</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	<label for=\"dong\">동</label>\r\n");
      out.write("	<select id=\"dong\">\r\n");
      out.write("		<option disabled=\"disabled\" selected=\"selected\">동 선택</option>\r\n");
      out.write("	</select>\r\n");
      out.write("	<button id=\"btn\">우편번호 검색</button>\r\n");
      out.write("</fieldset>\r\n");
      out.write("\r\n");
      out.write("	<br>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<br>\r\n");
      out.write("	<div id=\"result\">\r\n");
      out.write("		<table border=\"1\" width=\"800\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>우편번호</td>\r\n");
      out.write("				<td>시도</td>\r\n");
      out.write("				<td>구군</td>\r\n");
      out.write("				<td>동</td>\r\n");
      out.write("				<td>리</td>\r\n");
      out.write("				<td>번지</td>\r\n");
      out.write("		</table>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
